# ====================================
#  Web UI 前端服务的 Nginx 配置
# ====================================

# 主要功能:
#   1. 配置域名和SSL证书
#   2. HTTP 自动跳转 HTTPS  
#   3. 负载均衡转发到后端服务
#   4. 安全相关配置(SSL/TLS)
# ====================================

# 定义缓存区域
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=airflow_cache:20m max_size=10g 
                 inactive=60m use_temp_path=off;

# 全局参数优化 - 连接稳定性
client_max_body_size 50m;
client_body_buffer_size 16k;
client_body_timeout 60s;
client_header_timeout 60s;
send_timeout 60s;

# 限制每个IP的连接数
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn conn_limit_per_ip 20;
limit_conn_status 429;

# 定义后端服务器组
upstream web_backend {
    server 10.1.12.7:3000 max_fails=3 fail_timeout=30s;
    # 可以添加更多服务器节点(内网IP)
    # server 10.1.12.8:3000;
    # server 10.1.12.9:3000;
    
    # 负载均衡算法配置（可选）
    # least_conn; # 最少连接数优先
    # ip_hash;    # 按IP进行哈希，保证同一用户请求到同一服务器
    # hash $request_uri; # 按URI哈希
    
    keepalive 64; # 增加保持连接池大小
    keepalive_requests 1000; # 每个保持连接的请求数量上限
}

# 定义后端服务器组
upstream airflow_backend {
    server 10.1.20.3:80;
    keepalive 64;
}

# 重定向到HTTPS
server {
    listen 80;
    server_name _;

    # 将所有HTTP请求重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # 健康检查
    location /health {
        return 200 "healthy\n";
    }
}

# 代理到后端服务
server {
    listen 443 ssl;
    server_name _;

    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/lucyai.sale/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lucyai.sale/privkey.pem;
    
    # 优化SSL配置 - 支持更多的密码套件
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    
    # 增强SSL会话缓存
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_buffer_size 16k; # 增加缓冲区大小
    
    # 优化重用SSL会话
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HSTS配置 (HTTP严格传输安全)
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 健康检查端点
    location /health {
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 代理到后端服务
    location / {
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 超时设置
        proxy_connect_timeout 180s;
        proxy_read_timeout 600s;
        proxy_send_timeout 180s;
        
        # 缓冲区设置
        proxy_buffering on;
        proxy_buffer_size 32k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 128k;
        
        # 错误处理
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }
    
    # 代理到airflow
    location /airflow/ {
        # CORS支持
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # 处理CORS头部
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # 代理到后端
        proxy_pass http://airflow_backend;
        
        # 基本代理设置 (与主location相同)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 180s;
        proxy_read_timeout 600s;
        proxy_send_timeout 180s;
        
        # 缓冲区设置
        proxy_buffering on;
        proxy_buffer_size 32k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 128k;
        
        # 错误处理
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        
        # WebSocket支持
        proxy_http_version 1.1;
        
        # 为常用变量创建简单路径
        location ~ ^/airflow/api/v1/variables/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 处理CORS头部
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_hide_header 'Access-Control-Allow-Methods';
            proxy_hide_header 'Access-Control-Allow-Headers';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            
            # 代理到后端
            proxy_pass http://airflow_backend;
            
            # 禁用缓存以确保实时数据
            proxy_cache off;
            proxy_buffering off;
            
            # 基本代理设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}
