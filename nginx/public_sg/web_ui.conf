# ====================================
#  Web UI 前端服务的 Nginx 配置
# ====================================

# 主要功能:
#   1. 配置域名和SSL证书
#   2. HTTP 自动跳转 HTTPS  
#   3. 负载均衡转发到后端服务
#   4. 安全相关配置(SSL/TLS)
# ====================================

# 定义缓存区域
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=airflow_cache:10m max_size=10g inactive=60m use_temp_path=off;

# 解析DNS服务器配置
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# 定义代理服务器配置
proxy_pass_request_headers on;
proxy_pass_request_body on;

# 全局代理配置
set $proxy_server "proxy.lucyai.ai";
set $proxy_user "lucyai";
set $proxy_pass "lucyai";

# 定义后端服务器组
upstream web_backend {
    server 43.139.170.36:3000;
    # 可以添加更多服务器节点(内网IP)
    # server 10.1.12.8:3000;
    # server 10.1.12.9:3000;
    
    # 负载均衡算法配置（可选）
    # least_conn; # 最少连接数优先
    # ip_hash;    # 按IP进行哈希，保证同一用户请求到同一服务器
    # hash $request_uri; # 按URI哈希
}

# 定义后端服务器组
upstream airflow_backend {
    server 10.1.20.3:80;
}

# 定义后端服务器组
upstream dify_backend {
    server dify.lucyai.ai;
}

# 定义 Guacamole 后端服务器组
upstream guacamole_backend {
    server guacamole:8080;
}

# 重定向到HTTPS
server {
    listen 80;
    server_name lucyai.ai www.lucyai.ai;

    # 将所有HTTP请求重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# 代理到后端服务
server {
    listen 443 ssl;
    server_name lucyai.ai www.lucyai.ai;

    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/lucyai.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lucyai.ai/privkey.pem;
    
    # SSL协议配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    
    # SSL会话缓存
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # HSTS配置 (HTTP严格传输安全)
    # add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 代理到后端服务
    location / {
        # 使用代理访问后端
        proxy_pass http://web_backend;
        
        # 代理服务器配置
        proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 优化 WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s; # 增加读取超时时间以支持 WebSocket
        proxy_send_timeout 60s;
    }
    
    # 代理到airflow
    location /airflow/ {
        # 使用代理访问后端
        proxy_pass http://airflow_backend;
        
        # 代理服务器配置
        proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
        
        # 启用缓存
        proxy_cache airflow_cache;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 60m;    # 成功响应缓存1小时
        proxy_cache_key $request_uri;
        proxy_cache_lock on;
        
        # 添加缓存状态头
        add_header X-Cache-Status $upstream_cache_status;
        
        # 设置基本的代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 针对包含msg_count的变量请求 - 禁用缓存
        location ~ ^/airflow/api/v1/variables/[^/]+_msg_count {
            proxy_pass http://airflow_backend;
            
            # 代理服务器配置
            proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
            
            proxy_cache off;
            proxy_buffering off;
            
            # 设置基本的代理头
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 针对其他 API 变量接口的缓存规则
        location ~ ^/airflow/api/v1/variables/ {
            proxy_pass http://airflow_backend;
            
            # 代理服务器配置
            proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
            
            proxy_cache airflow_cache;
            proxy_cache_valid 200 5m;  # API 响应缓存5分钟
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_key $request_uri;
            add_header X-Cache-Status $upstream_cache_status;
            
            # 设置基本的代理头
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 代理到dify
    location /dify/ {
        # 使用代理访问后端
        proxy_pass http://dify.lucyai.ai;
        
        # 代理服务器配置
        proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
        
        proxy_set_header Host dify.lucyai.ai;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 大模型需要更长的超时时间
        proxy_connect_timeout 180s;   # 连接超时时间
        proxy_read_timeout 300s;      # 读取响应超时时间
        proxy_send_timeout 180s;      # 发送请求超时时间
        proxy_buffering off;          # 关闭缓冲，实时传输数据
    }
    
    # 代理到guacamole
    location /guacamole/ {
        # 使用代理访问后端
        proxy_pass http://guacamole_backend;
        
        # 代理服务器配置
        proxy_set_header Proxy-Authorization "Basic $proxy_user:$proxy_pass";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 增加超时时间（远程桌面需要更长的超时时间）
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
    }
}
